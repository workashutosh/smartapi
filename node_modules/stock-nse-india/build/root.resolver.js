"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
Object.defineProperty(exports, "__esModule", { value: true });
var index_1 = require("./index");
var nseIndia = new index_1.NseIndia();
function stringArrayFilter(input, filter) {
    var data = __spreadArray([], input);
    var offset = filter.offset, limit = filter.limit, eq = filter.eq, neq = filter.neq, inside = filter.in, nin = filter.nin, startsWith = filter.startsWith, regex = filter.regex;
    if (startsWith) {
        data = data.filter(function (item) { return item.startsWith(startsWith); });
    }
    if (regex) {
        var re_1 = new RegExp(regex);
        data = data.filter(function (item) { return re_1.test(item); });
    }
    if (inside === null || inside === void 0 ? void 0 : inside.length) {
        data = data.filter(function (item) { return inside.includes(item); });
    }
    if (nin === null || nin === void 0 ? void 0 : nin.length) {
        data = data.filter(function (item) { return !nin.includes(item); });
    }
    if (eq) {
        data = data.filter(function (item) { return item === eq; });
    }
    if (neq) {
        data = data.filter(function (item) { return item !== neq; });
    }
    if (offset !== undefined) {
        data = data.filter(function (_, index) { return index > offset; });
    }
    if (limit !== undefined) {
        data = data.filter(function (_, index) { return index < limit; });
    }
    return data;
}
function objectFilter(input, filterBy, filter) {
    var regex = filter.regex;
    var data = __spreadArray([], input);
    if (regex) {
        var re_2 = new RegExp(regex);
        data = data.filter(function (item) { return re_2.test(item[filterBy]); });
    }
    return data;
}
exports.default = {
    Query: {
        equities: function (_parent, _a) {
            var symbolFilter = _a.symbolFilter;
            return __awaiter(void 0, void 0, void 0, function () {
                var results;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, nseIndia.getAllStockSymbols()];
                        case 1:
                            results = _b.sent();
                            return [2 /*return*/, stringArrayFilter(results, symbolFilter)];
                    }
                });
            });
        },
        indices: function (_parent, _a) {
            var filter = _a.filter;
            return __awaiter(void 0, void 0, void 0, function () {
                var indices;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, nseIndia.getDataByEndpoint(index_1.ApiList.ALL_INDICES)];
                        case 1:
                            indices = _b.sent();
                            if (filter)
                                return [2 /*return*/, objectFilter(indices.data, filter.filterBy, filter.criteria)];
                            return [2 /*return*/, indices.data];
                    }
                });
            });
        }
    },
    Equity: {
        symbol: function (parent) {
            return parent;
        },
        details: function (parent) { return __awaiter(void 0, void 0, void 0, function () {
            var result;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, nseIndia.getEquityDetails(parent)];
                    case 1:
                        result = _a.sent();
                        return [2 /*return*/, result];
                }
            });
        }); }
    }
};
//# sourceMappingURL=root.resolver.js.map